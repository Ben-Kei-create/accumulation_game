using System.Collections;
using System.Collections.Generic;
using UnityEngine;

public class handController : MonoBehaviour
{
    // X座標の範囲
    private float minX = -1f;
    private float maxX = 3.5f;
    // 移動速度
    public float speed = 5f;

    public Transform otherObject; // 手と同じように動かしたいオブジェクト
    private Rigidbody otherRigidbody; // otherObjectのRigidbodyを保持

    private bool isDetached = false; // otherObjectがhandから分離したかを示すフラグ

    void Start()
    {
        // otherObjectのRigidbodyを取得
        if (otherObject != null)
        {
            otherRigidbody = otherObject.GetComponent<Rigidbody>();
            otherRigidbody.useGravity = false; // 最初は重力を無効にする
        }
    }

    void Update()
    {
        // 左右の入力を取得
        float input = Input.GetAxis("Horizontal");

        // 現在位置を取得
        Vector3 position = transform.position;

        // X座標を移動
        position.x += input * speed * Time.deltaTime;

        // X座標が範囲内に収まるように制限
        position.x = Mathf.Clamp(position.x, minX, maxX);

        // 新しい位置に設定
        transform.position = position;

        // `isDetached`が`false`の時のみotherObjectをhandに追従させる
        if (!isDetached && otherObject != null)
        {
            otherObject.position = new Vector3(position.x + 1.88f, otherObject.position.y, otherObject.position.z);
        }

        // エンターキーが押されたとき、otherObjectを分離して重力を追加
        if (Input.GetKeyDown(KeyCode.Return) && otherRigidbody != null && !isDetached)
        {
            isDetached = true; // 分離フラグを設定
            otherRigidbody.useGravity = true; // 重力を有効にする
        }
    }
}
